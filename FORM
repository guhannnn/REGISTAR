import React from "react";
import './register.css';
class RegisterForm extends React.Component {
  constructor() {
    super();
    this.state = {  
      fields: {},   
      errors: {}
    }
    this.handleChange = this.handleChange.bind(this);   
    this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);

  };
  handleChange(e) {
    let fields = this.state.fields;
    fields[e.target.name] = e.target.value;
    this.setState({
      fields
    });
  }
  submituserRegistrationForm(e) {
    console.log(this.validateForm());
    
    e.preventDefault();
    if (this.validateForm()) {
        console.log(this.state);
         let fields = {};
         fields["username"] = "";
         fields["emailid"] = "";
         fields["password"] = "";
        this.setState({fields:fields});
        console.log(this.state);    
    }
  }
  validateForm() {

    let fields = this.state.fields;
    let errors = {};
    let formIsValid = true;

    if (!fields["username"]) {
      formIsValid = false;
      errors["username"] = "Please Fill the column";
    }

    if (!fields["emailid"]) {
      formIsValid = false;
      errors["emailid"] = "Invalid Email";
    }

    if (typeof fields["emailid"] !== "undefined") {
      if (!fields["emailid"].match(/^.(?=.[@#$%&]).$/)) {
        formIsValid = false;
        errors["emailid"] = "Invalid mailid";
      
      }
    }

   

    if (!fields["password"]) {
      formIsValid = false;
      errors["password"] = "Please Fill the password";
    }

    if (typeof fields["password"] !== "undefined") {
      if (!fields["password"].match(/^.(?=.{8,})(?=.\d)(?=.[a-z])(?=.[A-Z])(?=.[@#$%&]).$/)) {
        formIsValid = false;
        errors["password"] = "Password is weak";
      
      }
    }

    if (typeof fields["password"] !== "undefined") {
      if (!fields["password"].match(/^.(?=.{8,})(?=.\d)(?=.[a-z])(?=.[A-Z]).$/)) {
        formIsValid = false;
        errors["password"] = "Password is good";
      
      }
    }
    if (typeof fields["password"] !== "undefined") {
      if (!fields["password"].match(/^.(?=.[A-Z])(?=.[@#$%&]).$/)) {
        formIsValid = false;
        errors["password"] = "Password is strong";
      
      }
    }

    if (typeof fields["password"] !== "undefined") {
      if (!fields["password"].match(/^.(?=.[A-Z]).$/)) {
        formIsValid = false;
        errors["password"] = "Password is very strong";
      
      }
    }
   

    this.setState({
      errors: errors
    });
    return formIsValid;  
  }
render() {
  return (
 
   <div id="register">
      <h3>Dynamic Form</h3>
      <form method="post"  name="userRegistrationForm"  onSubmit= {this.submituserRegistrationForm} className="h">
      <label>Enter your username</label>
      <br></br>
      <input type="text" name="username" value={this.state.fields.username} onChange={this.handleChange} />
      <div className="errorMsg">{this.state.errors.username}</div>
      <br></br>
      <label>Enter your Email</label>
      <br></br>
      <input type="text" name="emailid" value={this.state.fields.emailid} onChange={this.handleChange}  />
      <div className="errorMsg">{this.state.errors.emailid}</div>
      <br></br>
      <label>Enter your Password</label>
      <br></br>
      <input type="password" name="password" value={this.state.fields.password} onChange={this.handleChange} />
      <div className="errorMsg">{this.state.errors.password}</div>
      <br></br>
      <input type="submit" className="button"  value="Register"/>
      </form>
  </div>
    );
}
}
export default RegisterForm
